var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Part2_1 = require("./script/Part2");
var GameUI_1 = require("./script/GameUI");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/Part2.ts", Part2_1.default);
        reg("script/GameUI.ts", GameUI_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = " ";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/GameUI":6,"./script/Part2":7}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CameraMoveScript = /** @class */ (function (_super) {
    __extends(CameraMoveScript, _super);
    /**
     * 1.镜头跟随 target
     * 2.镜头角度调整
     * 3.镜头远近调整
     */
    function CameraMoveScript() {
        var _this = _super.call(this) || this;
        _this.rotainSpeed = 0.0006; //旋转速度
        _this.yawPitchRoll = new Laya.Vector3();
        _this.tempRotationZ = new Laya.Quaternion();
        _this.tempRotationX = new Laya.Quaternion();
        _this.tempRotationY = new Laya.Quaternion();
        return _this;
    }
    CameraMoveScript.prototype.onAwake = function () {
    };
    CameraMoveScript.prototype.onStart = function () {
        this.camera = this.owner;
        this.isMouseDown = false;
        // this.target = this.owner.t
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.onMouseOut);
    };
    CameraMoveScript.prototype.onMouseDown = function (e) {
        this.camera.transform.rotation.getYawPitchRoll(this.yawPitchRoll);
        this.lastMouseX = Laya.stage.mouseX;
        this.lastMouseY = Laya.stage.mouseY;
        this.isMouseDown = true;
    };
    CameraMoveScript.prototype.onMouseUp = function (e) {
        this.isMouseDown = false;
    };
    CameraMoveScript.prototype.onMouseOut = function (e) {
        this.isMouseDown = false;
    };
    CameraMoveScript.prototype.onUpdate = function () {
        // laya.
        console.log("time - ");
        // state.
        this.updateCamera();
    };
    CameraMoveScript.prototype.updateCamera = function () {
        if (!isNaN(this.lastMouseX) && !isNaN(this.lastMouseY)) {
            Laya.KeyBoardManager.hasKeyDown(Laya.Keyboard.W) && this.camera.transform.rotate(new Laya.Vector3(0, 1, 0), true, false);
            Laya.KeyBoardManager.hasKeyDown(Laya.Keyboard.S) && this.camera.transform.rotate(new Laya.Vector3(0, 1, 0), true, false);
            Laya.KeyBoardManager.hasKeyDown(Laya.Keyboard.A) && this.camera.transform.rotate(new Laya.Vector3(1, 0, 0), true, false);
            Laya.KeyBoardManager.hasKeyDown(Laya.Keyboard.D) && this.camera.transform.rotate(new Laya.Vector3(1, 0, 0), true, false);
            if (this.isMouseDown) {
                var mouseX = Laya.stage.mouseX - this.lastMouseX;
                var mouseY = Laya.stage.mouseY - this.lastMouseY;
                var yprElem = this.yawPitchRoll.elements;
                yprElem[0] -= mouseX * this.rotainSpeed * 0.5;
                yprElem[1] -= mouseX * this.rotainSpeed * 0.5;
                this.updateRotation();
            }
        }
        this.lastMouseX = Laya.stage.mouseX;
        this.lastMouseY = Laya.stage.mouseY;
    };
    CameraMoveScript.prototype.updateRotation = function () {
        var yprElem = this.yawPitchRoll.elements;
        if (Math.abs(yprElem[1]) < 1.5) {
            Laya.Quaternion.createFromYawPitchRoll(yprElem[0], yprElem[1], yprElem[2], this.tempRotationZ);
            this.camera.transform.localRotation = this.tempRotationZ;
        }
    };
    CameraMoveScript.prototype.onEnable = function () {
    };
    CameraMoveScript.prototype.onDestroy = function () {
    };
    CameraMoveScript.prototype.onDisable = function () {
    };
    return CameraMoveScript;
}(Laya.Script));
exports.default = CameraMoveScript;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CameraMoveScript_1 = require("./CameraMoveScript");
// import CreateScene from "./CreateScene";
var CreateScene2 = /** @class */ (function (_super) {
    __extends(CreateScene2, _super);
    function CreateScene2() {
        return _super.call(this) || this;
    }
    CreateScene2.prototype.onAwake = function () {
        this.scene = this.owner;
    };
    CreateScene2.prototype.onStart = function () {
        this.camera = this.scene.addChild(new Laya.Camera(0, 0.1, 100));
        this.camera.transform.translate(new Laya.Vector3(4.5, 6, 4.5));
        this.camera.transform.rotate(new Laya.Vector3(-30, 45, 0), true, false);
        this.camera.clearColor = new Laya.Vector4(0.5, 0.5, 0.5, 1);
        this.camera.addComponent(CameraMoveScript_1.default);
        var directionLight = this.scene.addChild(new Laya.DirectionLight());
        directionLight.color = new Laya.Vector3(1, 1, 1);
        directionLight.transform.worldMatrix.setForward(new Laya.Vector3(-1, -1, -1));
        var plane = this.scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createPlane(13, 13, 10, 10)));
        var planeMaterial = new Laya.BlinnPhongMaterial();
        Laya.loader.load("res/Layabox.png", Laya.Handler.create(null, function (tx) {
            planeMaterial.albedoTexture = tx;
        }));
        plane.meshRenderer.material = planeMaterial;
        plane.meshRenderer.castShadow = true;
        var rigidBody = plane.addComponent(Laya.PhysicsCollider);
        var box = new Laya.BoxColliderShape(13, 0, 13);
        rigidBody.colliderShape = box;
        this.createBox();
    };
    CreateScene2.prototype.createBox = function () {
        for (var i = 0; i < 8; i++) {
            this.addVerticalBox(-0.65, 0.165 + i * 0.33 * 2, 0);
            this.addVerticalBox(0, 0.165 + i * 0.33 * 2, 0);
            this.addVerticalBox(0.65, 0.165 + i * 0.33 * 2, 0);
            this.addHorizontalBox(0, 0.165 + 0.33 + i * 0.33 * 2, -0.65);
            this.addHorizontalBox(0, 0.165 + 0.33 + i * 0.33 * 2, 0);
            this.addHorizontalBox(0, 0.165 + 0.33 + i * 0.33 * 2, 0.65);
        }
    };
    CreateScene2.prototype.addVerticalBox = function (x, y, z) {
        var mat = new Laya.BlinnPhongMaterial();
        Laya.Texture2D.load("../../res/threeDimen/Physics/plywood.jpg", Laya.Handler.create(null, function (tex) {
            mat.albedoTexture = tex;
        }));
        var box = this.scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(0.5, 0.33, 2)));
        box.meshRenderer.material = mat;
        box.meshRenderer.castShadow = true;
        box.meshRenderer.receiveShadow = true;
        box.transform.position = new Laya.Vector3(x, y, z);
        var rigidBody = box.addComponent(Laya.Rigidbody3D);
        rigidBody.mass = 10;
        rigidBody.friction = 0.4;
        rigidBody.restitution = 0.2;
        var boxShape = new Laya.BoxColliderShape(0.5, 0.33, 2);
        rigidBody.colliderShape = boxShape;
    };
    CreateScene2.prototype.addHorizontalBox = function (x, y, z) {
        var mat = new Laya.BlinnPhongMaterial();
        Laya.Texture2D.load("../../res/threeDimen/Physics/plywood.jpg", Laya.Handler.create(null, function (tex) {
            mat.albedoTexture = tex;
        }));
        var box = this.scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(2, 0.33, 0.5)));
        box.meshRenderer.material = mat;
        box.meshRenderer.castShadow = true;
        box.meshRenderer.receiveShadow = true;
        box.transform.position = new Laya.Vector3(x, y, z);
        var rigidBody = box.addComponent(Laya.Rigidbody3D);
        rigidBody.mass = 10;
        rigidBody.friction = 1.0;
        rigidBody.restitution = 0.2;
        var boxShape = new Laya.BoxColliderShape(2, 0.33, 0.5);
        rigidBody.colliderShape = boxShape;
    };
    return CreateScene2;
}(Laya.Script));
exports.default = CreateScene2;
},{"./CameraMoveScript":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EveEmitter = /** @class */ (function () {
    function EveEmitter() {
        this.events = {};
    }
    EveEmitter.prototype.on = function (event, callback) {
        var callbacks = this.events[event] || []; //看下之前有没有监听，有监听的话就把之前的回调也
        callbacks.push(callback); //添加这次监听的回调
        this.events[event] = callbacks;
        return this;
    };
    EveEmitter.prototype.off = function (event, callback) {
        var callbacks = this.events[event]; //拿所有对应event的回调
        this.events[event] = callbacks && callbacks.filter(function (fn) { return fn !== callback; }); //把callback去除
        //filter过滤，不是对应callback的回调会继续保留，相等的会删除
        return this;
    };
    EveEmitter.prototype.emit = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var event = args[0];
        var params = [].slice.call(args, 1); //其他的全部保存到一个数组里面
        var callbacks = this.events[event]; //拿到对应事件的回调
        callbacks.forEach(function (fn) { return fn.apply(params); }); //把所有的都触发
        //apply、call、bind
        return this;
    };
    EveEmitter.prototype.once = function (event, callback) {
        var _this = this;
        var warpFanc = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            callback.apply(args);
            _this.off(event, warpFanc); //执行后立即注销
        };
        this.on(event, warpFanc); //绑定监听
        return this;
    };
    return EveEmitter;
}());
exports.default = EveEmitter;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var CreateScene2_1 = require("./CreateScene2");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        Laya.loader.load("res/layabox.png", Laya.Handler.create(_this, function () {
            var scene = new Laya.Scene3D();
            Laya.stage.addChild(scene);
            scene.addComponent(CreateScene2_1.default);
            // scene.addComponent(CameraMoveScript);
        }));
        return _this;
        // //添加3D场景
        // var scene: Laya.Scene3D = Laya.stage.addChild(new Laya.Scene3D()) as Laya.Scene3D;
        // //添加照相机
        // var camera: Laya.Camera = (scene.addChild(new Laya.Camera(0, 0.1, 100))) as Laya.Camera;
        // camera.transform.translate(new Laya.Vector3(0, 3, 3));
        // camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);
        // //添加方向光
        // var directionLight: Laya.DirectionLight = scene.addChild(new Laya.DirectionLight()) as Laya.DirectionLight;
        // directionLight.color = new Laya.Vector3(0.9, 0.2, 0.9);
        // directionLight.transform.worldMatrix.setForward(new Laya.Vector3(1, -1, 0));
        // //添加自定义模型
        // var box: Laya.MeshSprite3D = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1))) as Laya.MeshSprite3D;
        // box.transform.rotate(new Laya.Vector3(0, 45, 0), false, false);
        // var material: Laya.BlinnPhongMaterial = new Laya.BlinnPhongMaterial();
        // Laya.Texture2D.load("/layabox.png", Laya.Handler.create(null, function(tex:Laya.Texture2D) {
        // 		material.albedoTexture = tex;
        // }));
        // box.meshRenderer.material = material;
        // var vect:Laya.Vector3 = new Laya.Vector3(1,1,0);
        // Laya.timer.loop(10,this,function(){
        //     box.transform.rotate(vect,true,false);
        // });
        // var spr:Laya.MeshSprite3D = this.scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createSphere(1,10,10))) as Laya.MeshSprite3D;
        // spr.transform.rotate(new Laya.Vector3(0,90,0),false,false);
        // spr.transform.translate(new Laya.Vector3(0,5,0));
        // spr.meshRenderer.material = material;
        // spr.addComponent(Laya.PhysicsCollider);
        // var rig:Laya.Rigidbody3D = spr.addComponent(Laya.Rigidbody3D);
        // rig.colliderShape = new Laya.SphereColliderShape(1);
        // var floor:Laya.MeshSprite3D = this.scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createPlane(10,10))) as Laya.MeshSprite3D;
        // var floorCollider:Laya.PhysicsCollider = floor.addComponent(Laya.PhysicsCollider);
        // floorCollider.colliderShape = new Laya.BoxColliderShape(10,0,10);//
        // Laya.timer.loop(1000,this,function(){
        //     var clone:Laya.MeshSprite3D = Laya.Sprite3D.instantiate(spr) as Laya.MeshSprite3D;
        //     clone.transform.translate(new Laya.Vector3(0,5,0));
        //     this.scene.addChild(clone);
        // });
        // this.addComponent();
    }
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;
},{"./../ui/layaMaxUI":8,"./CreateScene2":4}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var EveEmitter_1 = require("./EveEmitter");
var Part2 = /** @class */ (function (_super) {
    __extends(Part2, _super);
    function Part2() {
        var _this = _super.call(this) || this;
        _this.init();
        var em = new EveEmitter_1.default();
        em.on("hello", _this.sayHello);
        em.on("sss", _this.sayHello);
        em.on("world", _this.sayWorld);
        em.on("any", _this.sayAny);
        em.emit("hello");
        em.emit("world");
        em.emit("sss");
        em.emit("any");
        em.off("any", _this.sayAny);
        em.emit("any");
        //
        _this.stage.on("stage", _this, function () {
            console.log("stage----->");
        });
        return _this;
        //    this.stage.de
    }
    Part2.prototype.sayHello = function () {
        console.log("hello");
    };
    Part2.prototype.sayWorld = function () {
        console.log("world");
    };
    Part2.prototype.sayAny = function () {
        console.log("any");
    };
    Part2.prototype.init = function () {
        //create去预加载3D资源
        Laya.loader.create("res/threeDimen/scene/LayaScene_dudeScene/Conventional/dudeScene.ls", Laya.Handler.create(this, function () {
            Laya.Scene3D.load("threeDimen/scene/LayaScene_dudeScene/Conventional/dudeScene.ls", Laya.Handler.create(null, function (scene) {
                Laya.stage.addChild(scene);
                var camera = scene.getChildByName("Camera");
            }));
        }));
    };
    return Part2;
}(layaMaxUI_1.ui.test.PartScene2UI));
exports.default = Part2;
},{"./../ui/layaMaxUI":8,"./EveEmitter":5}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ui;
(function (ui) {
    var test;
    (function (test) {
        var PartScene2UI = /** @class */ (function (_super) {
            __extends(PartScene2UI, _super);
            function PartScene2UI() {
                return _super.call(this) || this;
            }
            PartScene2UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/PartScene2");
            };
            return PartScene2UI;
        }(Laya.Scene));
        test.PartScene2UI = PartScene2UI;
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/TestScene");
            };
            return TestSceneUI;
        }(Laya.Scene));
        test.TestSceneUI = TestSceneUI;
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
